{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/prevent-unsaved-changes.guard.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lists/lists.component.css","webpack:///./src/app/lists/lists.component.html","webpack:///./src/app/lists/lists.component.ts","webpack:///./src/app/members/member-card/member-card.component.css","webpack:///./src/app/members/member-card/member-card.component.html","webpack:///./src/app/members/member-card/member-card.component.ts","webpack:///./src/app/members/member-detail/member-detail.component.css","webpack:///./src/app/members/member-detail/member-detail.component.html","webpack:///./src/app/members/member-detail/member-detail.component.ts","webpack:///./src/app/members/member-edit/member-edit.component.css","webpack:///./src/app/members/member-edit/member-edit.component.html","webpack:///./src/app/members/member-edit/member-edit.component.ts","webpack:///./src/app/members/member-list/member-list.component.css","webpack:///./src/app/members/member-list/member-list.component.html","webpack:///./src/app/members/member-list/member-list.component.ts","webpack:///./src/app/members/member-messages/member-messages.component.css","webpack:///./src/app/members/member-messages/member-messages.component.html","webpack:///./src/app/members/member-messages/member-messages.component.ts","webpack:///./src/app/members/photo-editor/photo-editor.component.css","webpack:///./src/app/members/photo-editor/photo-editor.component.html","webpack:///./src/app/members/photo-editor/photo-editor.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/models/pagination.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/services/alertify.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/error.interceptor.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-nav></app-nav>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'DatingApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BsDropdownModule, TabsModule, PaginationModule, ButtonsModule } from 'ngx-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { NgxGalleryModule } from 'ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport {TimeAgoPipe} from 'time-ago-pipe';\nimport { SignalRModule } from 'ng2-signalr';\nimport { SignalRConfiguration } from 'ng2-signalr';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ErrorInterceptorProvider } from './services/error.interceptor';\nimport { AlertifyService } from './services/alertify.service';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { appRoutes } from './routes';\nimport { AuthGuard } from './guards/auth.guard';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { PreventUnsavedChanges } from './guards/prevent-unsaved-changes.guard';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\n\nexport function tokenGetter() {\n   return localStorage.getItem(\"token\");\n}\n\nexport function createConfig(): SignalRConfiguration {\n   const c = new SignalRConfiguration();\n   c.hubName = '';\n   c.qs = { user: '' };\n   c.url = 'http://localhost:5000';\n   c.logging = true;\n   \n   // >= v5.0.0\n   c.executeEventsInZone = true; // optional, default is true\n   c.executeErrorsInZone = false; // optional, default is false\n   c.executeStatusChangeInZone = true; // optional, default is true\n   return c;\n }\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavComponent,\n      HomeComponent,\n      RegisterComponent,\n      MemberListComponent,\n      ListsComponent,\n      MessagesComponent,\n      MemberCardComponent,\n      MemberDetailComponent,\n      MemberEditComponent,\n      PhotoEditorComponent,\n      MemberMessagesComponent,\n      TimeAgoPipe,\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      NgxGalleryModule,\n      ButtonsModule.forRoot(),\n      PaginationModule.forRoot(),\n      BsDropdownModule.forRoot(),\n      TabsModule.forRoot(),\n      RouterModule.forRoot(appRoutes),\n      FileUploadModule,\n      ReactiveFormsModule,\n      BsDatepickerModule.forRoot(), \n      SignalRModule.forRoot(createConfig),\n      JwtModule.forRoot({\n         config: {\n            tokenGetter: tokenGetter,\n            whitelistedDomains:['localhost:5000'],\n            blacklistedRoutes: [\"localhost:5000/api/auth\"]\n         }\n      })\n   ],\n   providers: [\n      AuthService,\n      AlertifyService,\n      ErrorInterceptorProvider,\n      AuthGuard,\n      PreventUnsavedChanges\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyService } from '../services/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService) {}\n    \n  canActivate(): boolean {\n    if(this.authService.loggedIn()) return true;\n    else {\n      this.alertify.error(\"Access denied!\");\n      this.router.navigate([\"/home\"]);\n    }\n  }\n}\n","import { CanDeactivate } from \"@angular/router\";\r\nimport { MemberEditComponent } from \"../members/member-edit/member-edit.component\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\n\r\nexport class PreventUnsavedChanges implements CanDeactivate<MemberEditComponent> {\r\n    canDeactivate(component: MemberEditComponent) {\r\n        if(component.editForm.dirty) {\r\n            return confirm(\"Do you want to proceed? Any unsaved changes will be deleted.\");\r\n        }\r\n        return true;\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div *ngIf=\\\"!registerMode;else registerForm\\\"\\n    style=\\\"text-align:center\\\">\\n    <h1>Find your match</h1>\\n    <p class=\\\"lead\\\">Come on in to view you matches... All you need to do is sign up!</p>\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-primary btn-lg mr-2\\\" (click)=\\\"registerToggle()\\\">Register</button>\\n      <button class=\\\"btn btn-info btn-lg\\\">Learn more</button>\\n    </div>\\n  </div>\\n\\n  <ng-template #registerForm>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-4\\\">\\n          <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\"></app-register>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-template>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n\n  constructor(private http: HttpClient) { \n  }\n\n  ngOnInit() {\n  }\n\n  registerToggle() {\n    this.registerMode = !this.registerMode;\n  }\n\n  cancelRegisterMode(registerMode) {\n    this.registerMode = registerMode;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\\\'ve Liked'}} : {{pagination?.totalItems}}</h2>\\n</div>\\n\\n<div class=\\\"container mt-3\\\">\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"btn-group\\\">\\n    <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likers\\\" (click)=\\\"loadUsers()\\\">Members who like me</button>\\n    <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likees\\\" (click)=\\\"loadUsers()\\\">Members who I like</button>\\n  </div>\\n</div>\\n\\n<br>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"likesParam == 'Likers' || likesParam == 'Likees'\\\">\\n  <div *ngFor=\\\"let user of users\\\" class=\\\"col-sm-6 col-md-4 col-lg-4 col-xl-2\\\">\\n    <app-member-card [user]=\\\"user\\\"></app-member-card>\\n  </div>\\n</div>\\n\\n\\n\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"pagination\\\">\\n<pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\" [(ngModel)]=\\\"pagination.currentPage\\\"\\n  (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\"\\n  >\\n\\n</pagination>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Pagination } from 'src/app/models/pagination';\nimport { User } from '../models/user';\nimport { UserService } from '../services/user.service';\nimport { AlertifyService } from '../services/alertify.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\n\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  pageNumber = 1;\n  pageSize = 5;\n  user: User = JSON.parse(localStorage.getItem(\"user\"));\n  likesParam = \"Likers\";\n\n  constructor(private userService: UserService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParam)\n    .subscribe(\n      res => {\n      this.users = res.result;\n      this.pagination = res.pagination;\n      },\n      error => {\n        this.alertify.error(error);\n      });\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadUsers();\n  }\n}\n","module.exports = \".card:hover img {\\r\\n    -webkit-transform: scale(1.2, 1.2);\\r\\n            transform: scale(1.2, 1.2);\\r\\n    opacity: 0.8;\\r\\n}\\r\\n\\r\\n.card img {\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;\\r\\n}\\r\\n\\r\\n.card-img-wrapper {\\r\\n    overflow: hidden;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.member-icons {\\r\\n    position: absolute;\\r\\n    bottom: -30%;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n.card-img-wrapper:hover .member-icons {\\r\\n    bottom: 0;\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.animate {\\r\\n    transition: all 0.3s ease-in-out;\\r\\n}\"","module.exports = \"<div class=\\\"card mb-4\\\">\\n  <div class=\\\"card-img-wrapper\\\">\\n    <img class=\\\"card-img-top\\\" src=\\\"{{user.photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\">\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\n      <li class=\\\"list-inline-item\\\">\\n        <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members/', user.id]\\\">\\n          <i class=\\\"fa fa-user\\\"></i>\\n        </button>\\n      </li>\\n      <li class=\\\"list-inline-item\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"sendLike()\\\">\\n          <i class=\\\"fa fa-heart\\\"></i>\\n        </button>\\n      </li>\\n      <li class=\\\"list-inline-item\\\">\\n        <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members/', user.id]\\\" [queryParams]=\\\"{tab: 3}\\\">\\n          <i class=\\\"fa fa-envelope\\\"></i>\\n        </button>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-body p-1\\\">\\n    <h6 class=\\\"card-title text-center mb-1\\\"><i class=\\\"fa fa-user\\\"></i>\\n      {{user.knownAs}}, {{user.age}}\\n    </h6>\\n    <p class=\\\"card-text text-muted text-center\\\">\\n      {{user.city}}\\n    </p>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { AlertifyService } from 'src/app/services/alertify.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n\n  constructor(private authService: AuthService,\n    private userService: UserService,\n    private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  sendLike() {\n    this.userService.sendLike(this.authService.getId(), this.user.id)\n      .subscribe(\n        () => {\n          this.alertify.success(\"You have liked \" + this.user.knownAs);\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n}\n","module.exports = \".img-thumbnail {\\r\\n    margin: 2vw auto;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\" *ngIf=\\\"user\\\">\\n        <img src=\\\"{{user.photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user?.knowAs}}\\\" class=\\\"card-img-top img-thumbnail\\\">\\n        <div class=\\\"card-body\\\">\\n            <h4>{{user?.knownAs}}</h4>\\n          <div>\\n            <strong>Location:</strong> {{user.city}}\\n          </div>\\n          <div>\\n            <strong>Age:</strong> {{user.age}}\\n          </div>\\n          <div>\\n            <strong>Last Active:</strong> {{user.lastActive | timeAgo}}\\n          </div>\\n          <div>\\n            <strong>Member Since:</strong> {{user.created | date}}\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group d-flex\\\">\\n            <button class=\\\"btn btn-primary w-100\\\">Like</button>\\n            <button *ngIf=\\\"!memberTabs.tabs[3].active\\\" class=\\\"btn btn-success w-100\\\" (click)=\\\"selectTab(3)\\\">Message</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\" id=\\\"memberTabs\\\" #memberTabs>\\n          <tab heading=\\\"About {{user?.knownAs}}\\\">\\n            <h4>Description</h4>\\n            <p>{{user?.introduction}}</p>\\n            <h4>Looking For</h4>\\n            <p>{{user?.lokingFor}}</p>\\n          </tab>\\n          <tab heading=\\\"Interests\\\">\\n            <h4>Interests</h4>\\n            <p>{{user?.interests}}</p>\\n          </tab>\\n          <tab heading=\\\"Photos\\\">\\n            <h4>Photos</h4>\\n            <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\" *ngIf=\\\"user\\\"></ngx-gallery>\\n          </tab>\\n          <tab heading=\\\"Messages\\\">\\n            <h4>Messages</h4>\\n            <app-member-messages [user]=\\\"user\\\" *ngIf=\\\"user\\\"></app-member-messages>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/models/user';\nimport { AlertifyService } from 'src/app/services/alertify.service';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery';\nimport { TabsetComponent } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n  @ViewChild(\"memberTabs\") memberTabs: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private activeRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.loadUser();\n\n    this.galleryOptions = [{\n      width: \"500px\",\n      height: \"500px\",\n      imagePercent: 100,\n      thumbnailsColumns: 4,\n      imageAnimation: NgxGalleryAnimation.Slide,\n      preview: false\n    }];\n\n    this.activeRoute.queryParams.subscribe(params => {\n      const selectedTab = params[\"tab\"];\n      selectedTab > 0 ? this.selectTab(selectedTab) : 0;\n    })\n  }\n\n  getImages() {\n    const imageUrl = [];\n\n    this.user.photos.forEach(photo => {\n      imageUrl.push({\n        small: photo.url,\n        medium: photo.url,\n        big: photo.url,\n        description: photo.description\n      });\n    })\n    return imageUrl;\n  }\n\n  loadUser() {\n    this.userService.getUser(+this.activeRoute.snapshot.params[\"id\"])\n      .subscribe(\n        user => {\n          this.user = user;\n        },\n        error => {\n          this.alertify.error(error);\n        },\n        () => {\n          this.galleryImages = this.getImages();\n        }\n      )\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n    document.querySelector(\"#memberTabs\")\n      .scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n  }\n}\n","module.exports = \".img-thumbnail {\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container mt-4\\\" *ngIf=\\\"user\\\">\\n  <div class=\\\"row ml-2\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <h1>{{user.knownAs}}</h1>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"alert alert-info\\\" *ngIf=\\\"editForm.dirty\\\">\\n        <strong>Information:</strong> You have made changes. Any unsaved changes will be lost.\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img [src]=\\\"getMainPhoto() || '../../../assets/user.png'\\\" [alt]=\\\"user.knowAs\\\"\\n          class=\\\"card-img-top img-thumbnail\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Location:</strong>\\n            <p>{{user.city}}</p>\\n          </div>\\n          <div>\\n            <strong>Age:</strong>\\n            <p>{{user.age}}</p>\\n          </div>\\n          <div>\\n            <strong>Last Active:</strong>\\n            <p>{{user.lastActive | timeAgo}}</p>\\n          </div>\\n          <div>\\n            <strong>Member Since:</strong>\\n            <p>{{user.created | date}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <button [disabled]=\\\"!editForm.dirty\\\" form=\\\"editForm\\\" class=\\\"btn btn-success btn-block\\\">Save Changes</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\">\\n          <tab heading=\\\"Edit Profile\\\">\\n            <form id=\\\"editForm\\\" #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateUser(editForm)\\\">\\n              <h4>Description</h4>\\n              <textarea name=\\\"introduction\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.introduction\\\">\\n              </textarea>\\n              <h4 class=\\\"mt-2\\\">Looking For</h4>\\n              <textarea name=\\\"lookingFor\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.lookingFor\\\">\\n              </textarea>\\n              <h4 class=\\\"mt-2\\\">Interests</h4>\\n              <textarea name=\\\"interests\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.interests\\\">\\n              </textarea>\\n              <h4 class=\\\"mt-2\\\">Location Details:</h4>\\n              <div class=\\\"form-inline\\\">\\n                <label for=\\\"city\\\">City</label>\\n                <input class=\\\"form-control ml-2 mr-3\\\" type=\\\"text\\\" name=\\\"city\\\" [(ngModel)]=\\\"user.city\\\">\\n                <label for=\\\"country\\\">Country</label>\\n                <input class=\\\"form-control ml-2 mr-3\\\" type=\\\"text\\\" name=\\\"country\\\" [(ngModel)]=\\\"user.country\\\">\\n              </div>\\n            </form>\\n          </tab>\\n          <tab heading=\\\"Photos\\\">\\n            <h4>Photos</h4>\\n            <app-photo-editor [photos]=\\\"user.photos\\\"></app-photo-editor>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { AlertifyService } from 'src/app/services/alertify.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild(\"editForm\") editForm: NgForm;\n  @HostListener(\"window:beforeunload\", [\"$event\"])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n  user: any;\n\n  constructor(\n    private authService: AuthService,\n    private alertify: AlertifyService,\n    private userService: UserService) { }\n\n  ngOnInit() {\n    this.loadUser();\n  }\n\n  loadUser() {\n    this.userService.getUser(this.authService.getId())\n      .subscribe(\n        user => {\n          this.user = user;\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      )\n  }\n\n  updateUser() {\n    this.userService.updateUser(this.authService.getId(), this.user)\n      .subscribe(\n        next => {\n          this.editForm.reset(this.user);\n          this.alertify.success(\"Profile Updated Successfully\");\n        },\n        error => {\n          this.alertify.error(error);\n        })\n  }\n\n  getMainPhoto() {\n    this.user.photoUrl = this.authService.getCurrentUser().photoUrl;\n    return this.user.photoUrl;\n  }\n\n}\n","module.exports = \".btn, .form-group {\\r\\n    margin-top: 10px;\\r\\n}\"","module.exports = \"<div class=\\\"text-center mt-3\\\" *ngIf=\\\"pagination\\\">\\n  <h2>Your matches: {{pagination.totalItems}} found</h2>\\n</div>\\n\\n<div class=\\\"container mt-5\\\">\\n  <form class=\\\"form-inline\\\" #filters=\\\"ngForm\\\" (ngSubmit)=\\\"loadUsers()\\\" \\n    (change)=\\\"loadUsers()\\\" novalidate>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"minAge\\\">Age From</label>\\n      <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\"\\n        id=\\\"minAge\\\" name=\\\"minAge\\\" [(ngModel)]=\\\"userParams.minAge\\\">\\n    </div>\\n  \\n    <div class=\\\"form-group px-2\\\">\\n      <label for=\\\"maxAge\\\">Age To</label>\\n      <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\"\\n        id=\\\"maxAge\\\" name=\\\"maxAge\\\"  [(ngModel)]=\\\"userParams.maxAge\\\">\\n    </div>\\n  \\n    <div class=\\\"form-group px-2\\\">\\n      <label for=\\\"gender\\\">Show: </label>\\n      <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\"\\n        id=\\\"gender\\\" name=\\\"gender\\\"  [(ngModel)]=\\\"userParams.gender\\\">\\n        <option *ngFor=\\\"let gender of genderList\\\" value={{gender.value}}>\\n          {{gender.display}}\\n        </option>\\n      </select>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-info\\\" style=\\\"margin-left:10px\\\"\\n      (click)=\\\"resetFilters()\\\">Reset Filter</button>\\n    <div class=\\\"col\\\">\\n      <div class=\\\"btn-group float-right\\\">\\n        <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\"\\n          [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" btnRadio=\\\"lastActive\\\"\\n        >Last Active</button>\\n        <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\"\\n          [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" btnRadio=\\\"created\\\"\\n        >Newest</button>\\n      </div>\\n    </div>\\n  </form>\\n  <br>\\n\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-lg-2 col-md-3 col-sm-6\\\">\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\n    </div>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"pagination\\\" class=\\\"d-flex justify-content-center\\\">\\n  <pagination [boundaryLinks]=\\\"true\\\"\\n    [totalItems]=\\\"pagination.totalItems\\\"\\n    [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n    [(ngModel)]=\\\"pagination.currentPage\\\"\\n    (pageChanged)=\\\"pageChanged($event)\\\"\\n    previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n  </pagination>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { AlertifyService } from '../../services/alertify.service';\nimport { User } from '../../models/user';\nimport { Pagination } from 'src/app/models/pagination';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  pageNumber = 1;\n  pageSize = 5;\n  user: User = JSON.parse(localStorage.getItem(\"user\"));\n  genderList = [{display: \"Male\", value: \"male\"}, {display: \"Female\", value: \"female\"}]\n  userParams: any = {};\n\n  constructor(private userService: UserService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.resetFilters();\n  }\n\n  loadUsers() {\n    this.userService.getUsers(this.pageNumber, this.pageSize, this.userParams).subscribe(res => {\n      this.users = res.result;\n      this.pagination = res.pagination;\n    },\n    error => {\n      this.alertify.error(error);\n    });\n  }\n\n  \n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadUsers();\n  }\n\n  resetFilters() {\n    this.userParams.gender = this.user.gender == \"male\" ? \"female\" : \"male\";\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.userParams.orderBy = \"lastActive\";\n\n    this.loadUsers();\n  }\n}\n","module.exports = \".card {\\r\\n    border: none;\\r\\n}\\r\\n\\r\\n.chat {\\r\\n    list-style: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.chat li {\\r\\n    margin-bottom: 10px;\\r\\n    padding-bottom: 20px;\\r\\n    border-bottom: 1px dotted #B3A9A9;\\r\\n}\\r\\n\\r\\n.rounded-circle {\\r\\n    height: 5-px;\\r\\n    width: 50px;\\r\\n    margin-left: 3vmin;\\r\\n    margin-right: 3vmin;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    overflow-y: scroll;\\r\\n    height: 52vh;\\r\\n}\\r\\n\\r\\n.senderMessage .chat-body p {\\r\\n    text-align: right;\\r\\n    margin: 3vmin;\\r\\n}\"","module.exports = \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-body\\\" *ngIf=\\\"messages\\\">\\r\\n        <div *ngIf=\\\"messages?.length === 0\\\">\\r\\n            <p>No messages yet.... say hi using the messaeg box below</p>\\r\\n        </div>\\r\\n\\r\\n        <ul class=\\\"chat\\\">\\r\\n            <li *ngFor=\\\"let message of messages\\\">\\r\\n                <!-- by them -->\\r\\n                <div (loaded)=\\\"scrollToBottom()\\\" *ngIf=\\\"message.senderId == user.id\\\">\\r\\n                    <span class=\\\"chat-img float-left\\\">\\r\\n                        <img [src]=\\\"message.senderPhotoUrl\\\" [alt]=\\\"message.senderKnownAs\\\" class=\\\"rounded-circle\\\">\\r\\n                    </span>\\r\\n                    <div class=\\\"chat-body \\\">\\r\\n                        <p>{{message.content}}</p>\\r\\n                        <div class=\\\"header\\\">\\r\\n                            <!-- <strong class=\\\"primary-font\\\">\\r\\n                                {{message.senderKnownAs}}\\r\\n                            </strong> -->\\r\\n                            <small class=\\\"text-muted float-right\\\">\\r\\n                                <span class=\\\"fa fa-clock-o\\\"> {{message.messageSent | timeAgo}} </span>\\r\\n                            </small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <!-- by me -->\\r\\n                <div *ngIf=\\\"message.senderId != user.id\\\" class=\\\"senderMessage\\\">\\r\\n                    <span class=\\\"chat-img float-right\\\">\\r\\n                        <img [src]=\\\"message.senderPhotoUrl\\\" [alt]=\\\"message.senderKnownAs\\\" class=\\\"rounded-circle\\\">\\r\\n                    </span>\\r\\n                    <div class=\\\"chat-body \\\">\\r\\n                        <p>{{message.content}}</p>\\r\\n                        <div class=\\\"header\\\">\\r\\n                            <small class=\\\"text-muted float-left\\\">\\r\\n                                <span class=\\\"fa fa-clock-o\\\"> {{message.messageSent | timeAgo}} </span>\\r\\n                                <span *ngIf=\\\"!message.isRead\\\" class=\\\"text-danger\\\"> (Sent) </span>\\r\\n                                <span *ngIf=\\\"message.isRead\\\" class=\\\"text-success\\\"> (Read {{message.dateRead | timeAgo}}) </span>\\r\\n                            </small>\\r\\n                            <!-- <strong class=\\\"primary-font float-right\\\">\\r\\n                                {{message.senderKnownAs}}\\r\\n                            </strong> -->\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </li>\\r\\n        </ul>\\r\\n        <div id=\\\"chatBottom\\\"></div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-footer\\\">\\r\\n        <form #messageForm=\\\"ngForm\\\" (ngSubmit)=\\\"sendMessage()\\\">\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"content\\\" required\\r\\n                    placeholder=\\\"send a private message\\\" [(ngModel)]=\\\"message.content\\\">\\r\\n                <div class=\\\"input-group-append\\\">\\r\\n                    <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!message.content\\\">Send</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { AlertifyService } from 'src/app/services/alertify.service';\nimport { User } from 'src/app/models/user';\nimport { Message } from 'src/app/models/Message';\nimport { tap } from 'rxjs/operators';\n// import { SignalR, IConnectionOptions } from 'ng2-signalr';\nimport * as signalR from \"@aspnet/signalr\";\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit, OnDestroy {\n  @Input() user: User;\n  messages: Message[];\n  message: any = {};\n  connection: signalR.HubConnection;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private alertify: AlertifyService\n    ) { }\n\n  ngOnInit() {\n    this.loadMessageThread();\n    this.connectToMessageHub();\n  }\n\n  ngOnDestroy(): void {\n    this.connection.stop();\n  }\n    \n  connectToMessageHub() {\n    //signalr\n    this.connection = new signalR.HubConnectionBuilder()\n      .withUrl(\"http://localhost:5000/messagehub\", { accessTokenFactory: () => this.getAccessToken() })\n      .build();\n\n    this.connection\n      .start()\n      .then(() => console.log('Connected to messageHub'))\n      .catch(err => console.log(err));\n\n    this.connection.on(\"newMessage\", (message: Message) => {\n      this.newMessage(message);\n    });\n  }\n\n  getAccessToken() {\n    return localStorage.getItem(\"token\");\n  }\n\n  newMessage(message: Message) {\n    var userId = +this.authService.getId();\n\n    //check if the message already exists\n    var isNew = true;\n    this.messages.forEach(m => {\n      if(m.id == message.id) {\n        m.isRead = true;\n        m.dataRead = message.dataRead;\n        isNew = false;\n      }\n    });\n\n    //replace if exists else push new message\n    if(isNew)\n      this.messages.push(message);\n\n      if(message.recipientId === userId && message.isRead == false)\n        this.userService.markMessageAsRead(userId, message.id);\n\n    this.scrollToBottom();\n  }\n\n  loadMessageThread() {\n    this.userService.getMessageThread(this.authService.getId(), this.user.id)\n      .pipe(\n        tap((messages: Message[]) => {\n          const userId = +this.authService.getId();\n          messages.forEach(message => {\n            if(message.recipientId === userId && message.isRead == false)\n              this.userService.markMessageAsRead(userId, message.id);\n          });\n        })\n      )\n      .subscribe(\n        (messages: Message[]) => {\n          this.messages = messages.slice().reverse();\n      },\n      error => {\n        this.alertify.error(error);\n      },\n      () => {\n        this.scrollToBottom();\n      })\n  }\n\n  sendMessage() {\n    this.message.recipientId = this.user.id;\n    this.userService.sendMessage(this.authService.getId(), this.message)\n      .subscribe(\n        (message: Message) => {\n          // this.messages.push(message);\n          this.message.content = \"\";\n        },\n        error => {\n          this.alertify.error(error);\n        })\n  }\n\n  scrollToBottom() {\n    setTimeout(() => {\n      document.querySelector(\"#chatBottom\")\n        .scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    }, 100);\n  }\n}\n","module.exports = \"img.img-thumbnail {\\r\\n    height: 100px;\\r\\n    min-width: 100px !important;\\r\\n    margin-bottom: 2px;\\r\\n}\\r\\n\\r\\n.nv-file-over {\\r\\n    border: dotted 3px lightseagreen;\\r\\n}\\r\\n\\r\\ninput[type=file] {\\r\\n    color: transparent;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-2\\\" *ngFor=\\\"let photo of photos\\\">\\n    <img src=\\\"{{photo.url}}\\\" class=\\\"img-thumbnail p-1 mt-2\\\">\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-sm mr-1\\\"\\n        [ngClass]=\\\"photo.isMain ? 'btn-success active' : 'btn-secondary'\\\"\\n        (click)=\\\"setMainPhoto(photo)\\\"\\n        [disabled]=\\\"photo.isMain\\\"\\n      >Main</button>\\n      <button class=\\\"btn btn-sm btn-danger\\\"\\n        (click)=\\\"deletePhoto(photo.id)\\\"\\n        [disabled]=\\\"photo.isMain\\\">\\n        <i class=\\\"fa fa-trash-o\\\"></i>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row mt-3\\\">\\n\\n  <div class=\\\"col-md-3\\\">\\n    <h3>Add Photos</h3>\\n\\n    <div ng2FileDrop\\n      [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\"\\n      (fileOver)=\\\"fileOverBase($event)\\\"\\n      [uploader]=\\\"uploader\\\"\\n      class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\n      <i class=\\\"fa fa-upload fa-3x\\\"></i>\\n      Drop Photos Here\\n    </div>\\n\\n    Multiple\\n    <input type=\\\"file\\\" ng2FileSelect\\n      [uploader]=\\\"uploader\\\" multiple /><br />\\n\\n    Single\\n    <input type=\\\"file\\\" ng2FileSelect\\n      [uploader]=\\\"uploader\\\" />\\n  </div>\\n\\n  <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n\\n    <h3>Upload queue</h3>\\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\\n\\n    <table class=\\\"table\\\">\\n      <thead>\\n        <tr>\\n          <th width=\\\"50%\\\">Name</th>\\n          <th>Size</th>\\n          <!-- <th>Progress</th>\\n          <th>Status</th>\\n          <th>Actions</th> -->\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of uploader.queue\\\">\\n          <td><strong>{{ item?.file?.name }}</strong></td>\\n          <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n          <!-- <td *ngIf=\\\"uploader.options.isHTML5\\\">\\n            <div class=\\\"progress\\\" style=\\\"margin-bottom: 0;\\\">\\n              <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': item.progress + '%' }\\\"></div>\\n            </div>\\n          </td>\\n          <td class=\\\"text-center\\\">\\n            <span *ngIf=\\\"item.isSuccess\\\"><i class=\\\"glyphicon glyphicon-ok\\\"></i></span>\\n            <span *ngIf=\\\"item.isCancel\\\"><i class=\\\"glyphicon glyphicon-ban-circle\\\"></i></span>\\n            <span *ngIf=\\\"item.isError\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i></span>\\n          </td>\\n          <td nowrap>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success btn-xs\\\" (click)=\\\"item.upload()\\\" [disabled]=\\\"item.isReady || item.isUploading || item.isSuccess\\\">\\n              <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\" (click)=\\\"item.cancel()\\\" [disabled]=\\\"!item.isUploading\\\">\\n              <span class=\\\"glyphicon glyphicon-ban-circle\\\"></span> Cancel\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"item.remove()\\\">\\n              <span class=\\\"glyphicon glyphicon-trash\\\"></span> Remove\\n            </button>\\n          </td> -->\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <div>\\n      <div>\\n        Queue progress:\\n        <div class=\\\"progress mb-4\\\">\\n          <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n        </div>\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\" (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n        <span class=\\\"fa fa-upload\\\"></span> Upload\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\" (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n        <span class=\\\"fa fa-ban\\\"></span> Cancel\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\" (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n        <span class=\\\"fa fa-trash\\\"></span> Remove\\n      </button>\\n    </div>\\n\\n  </div>\\n\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Photo } from 'src/app/models/photo';\nimport { environment } from 'src/environments/environment';\nimport { FileUploader } from 'ng2-file-upload';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { AlertifyService } from 'src/app/services/alertify.service';\nimport { User } from 'src/app/models/user';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  baseUrl = environment.apiUrl;\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  currentMainPhoto: Photo;\n \n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  public fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + \"users/\" + this.authService.getId() + \"/photos\",\n      authToken: \"Bearer \" + localStorage.getItem(\"token\"),\n      isHTML5: true,\n      allowedFileType: [\"image\"],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {file.withCredentials = false;}\n  \n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if(response) {\n        const res: Photo = JSON.parse(response);\n\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain\n        }\n        this.photos.push(photo);\n        if(photo.isMain) {\n          var user: User = JSON.parse(localStorage.getItem(\"user\"));\n          user.photoUrl = photo.url;\n          localStorage.setItem(\"user\", JSON.stringify(user));\n        }\n      }\n    };\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.userService.setMainPhoto(this.authService.getId(), photo.id)\n      .subscribe(\n        () => {\n          this.currentMainPhoto = this.photos.filter(p => p.isMain === true)[0];\n          this.currentMainPhoto.isMain = false;\n          photo.isMain = true;\n\n          var user: User = JSON.parse(localStorage.getItem(\"user\"));\n          user.photoUrl = photo.url;\n          localStorage.setItem(\"user\", JSON.stringify(user));\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      )\n  }\n\n  deletePhoto(photoId: number) {\n    this.alertify.confirm(\"Are you sure you want to delete this photo?\", () => {\n      this.userService.deletePhoto(this.authService.getId(), photoId).subscribe(() => {\n        this.photos.splice(this.photos.findIndex(p => p.id == photoId), 1);\n        this.alertify.success(\"Photo has been deleted\");\n      }, error => {\n        this.alertify.error(\"Failed to delete the photo\");\n      });\n      return 0;\n    });\n  }\n}\n","module.exports = \".img-circle {\\r\\n    max-height: 50px;\\r\\n}\\r\\n\\r\\ntd {\\r\\n    vertical-align: middle;\\r\\n}\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Unread\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope\\\"></i> Unread\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Inbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope-open\\\"></i> Inbox\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Outbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-paper-plane\\\"></i> Outbox\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"messages?.length == 0\\\">\\n    <h3>No messages</h3>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"messages?.length > 0\\\">\\n    <table class=\\\"table table-hover mt-3\\\" style=\\\"cursor: pointer\\\" *ngIf=\\\"messages\\\">\\n      <tr>\\n        <th style=\\\"width: 40%\\\">Message</th>\\n        <th style=\\\"width: 20%\\\">From / To</th>\\n        <th style=\\\"width: 20%\\\">Sent / Received</th>\\n        <th style=\\\"width: 20%\\\"></th>\\n      </tr>\\n      <tr *ngFor=\\\"let message of messages\\\" [routerLink]=\\\"['/members', \\n        messageContainer == 'Outbox' ? message.recipientId : message.senderId]\\\" [queryParams]=\\\"{tab: 3}\\\">\\n        <td>{{message.content}}</td>\\n        <td>\\n          <div *ngIf=\\\"messageContainer != 'Outbox'\\\">\\n                <img src={{message?.senderPhotoUrl}} class=\\\"img-circle rounded-circle mr-2\\\">\\n                <strong>{{message.senderKnownAs}}</strong>\\n          </div>\\n          <div *ngIf=\\\"messageContainer == 'Outbox'\\\">\\n                <img src={{message?.recipientPhotoUrl}} class=\\\"img-circle rounded-circle mr-2\\\">\\n                <strong>{{message.recipientKnownAs}}</strong>\\n          </div>\\n        </td>\\n        <td>{{message.messageSent | timeAgo}}</td>\\n        <td>\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteMessageConfirm(message.id)\\\">Delete</button>\\n        </td>\\n      </tr>\\n    </table>\\n\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"pagination\\\">\\n    <pagination [boundaryLinks]=\\\"true\\\" \\n                [totalItems]=\\\"pagination.totalItems\\\"\\n                [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n                [(ngModel)]=\\\"pagination.currentPage\\\"\\n                (pageChanged)=\\\"pageChanged($event)\\\"\\n              previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n  </pagination>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Pagination } from '../models/pagination';\nimport { AuthService } from '../services/auth.service';\nimport { UserService } from '../services/user.service';\nimport { Message } from '../models/Message';\nimport { AlertifyService } from '../services/alertify.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\n\nexport class MessagesComponent implements OnInit {\n  pagination: Pagination;\n  pageNumber = 1;\n  pageSize = 5;\n  messageContainer = \"Unread\";\n  messageParams: any = {};\n  messages: Message[];\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    this.userService.getMessages(this.authService.getId(), this.pageNumber, this.pageSize, this.messageContainer)\n      .pipe(\n        tap(messages => {\n          const userId = +this.authService.getId();\n          messages.result.forEach(message => {\n            if(message.recipientId === userId)\n              this.userService.markMessageAsRead(userId, message.id);\n          });\n        })\n      )\n      .subscribe(\n        response => {\n        this.messages = response.result;\n        this.pagination = response.pagination;\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      )\n  }\n\n  deleteMessageConfirm(id: number) {\n    this.alertify.confirm(\"Are you sure you want to delete this message?\", () => {\n      this.deleteMessage(id);\n      return 0;\n    });\n  }\n\n  deleteMessage(id: number) {\n    this.userService.deleteMessage(this.authService.getId(), id).subscribe(\n      () => {\n        this.alertify.success(\"Message has been deleted\");\n        this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n      },\n      error => {\n        this.alertify.error(error);\n      });\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadMessages();\n  }\n\n}\n","export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n    result: T;\n    pagination: Pagination;\n}","module.exports = \".nav-link:focus {\\r\\n    outline: 1px dotted whitesmoke;\\r\\n}\\r\\n\\r\\n.user-image {\\r\\n    max-height: 50px;\\r\\n    border: 2px solid white;\\r\\n    display: inline;\\r\\n    border-radius: 50%;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"[ '/home' ]\\\">Dating App</a>\\n\\n    <ul class=\\\"navbar-nav mr-auto\\\" *ngIf=\\\"loggedIn()\\\">\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"[ '/members' ]\\\">Matches</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"[ '/lists' ]\\\">Lists</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"[ '/messages' ]\\\">Messages</a>\\n      </li>\\n    </ul>\\n\\n    <form #loginForm=\\\"ngForm\\\" *ngIf=\\\"!loggedIn();else welcome\\\" (ngSubmit)=\\\"login(loginForm.value)\\\" class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input name=\\\"username\\\" ngModel required\\n        class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Username\\\">\\n      <input name=\\\"password\\\" ngModel required\\n        class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" placeholder=\\\"Password\\\">\\n      <button [disabled]=\\\"loginForm.invalid\\\"\\n        class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\"\\n      >Login</button>\\n    </form>\\n\\n    <ng-template #welcome>\\n      <span class=\\\"mr-2\\\">\\n        <img class=\\\"user-image\\\" [src]=\\\"getCurrentUser().photoUrl || '../../assets/user.png'\\\">\\n      </span>\\n      <div dropdown class=\\\"dropdown\\\">\\n        <a dropdownToggle (click)=\\\"false\\\"\\n          class=\\\"dropdown-toggle text-light\\\"\\n          style=\\\"cursor: pointer;\\\"\\n          >Welcome {{getCurrentUser().knownAs | titlecase}}\\n        </a>\\n        \\n        <div *dropdownMenu class=\\\"dropdown-menu\\\">\\n          <a href=\\\"#\\\" class=\\\"dropdown-item\\\"\\n            style=\\\"cursor: pointer;\\\" [routerLink]=\\\"['/member/edit']\\\">\\n            <i class=\\\"fa fa-user\\\"></i> Edit Profile\\n          </a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\"\\n            (click)=\\\"logout()\\\">\\n            <i class=\\\"fa fa-sign-out\\\"></i> Logout\\n          </a>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private alertify: AlertifyService,\n    private router: Router) {\n      //forwards the user to home when logged out\n      window.addEventListener(\"storage\", () => {\n        if(localStorage.getItem(\"token\") == null)\n          this.router.navigate([\"/home\"]);\n      });\n    }\n\n  ngOnInit() {\n  }\n\n  login(form) {\n    this.authService.login(form).subscribe(\n      next => {\n        this.alertify.success(\"Successfully Logged in\");\n      },\n      error => {\n        this.alertify.error(error);\n      },\n      () => {\n        this.router.navigate([\"/members\"]);\n      }\n    )\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  getCurrentUser() {\n    return this.authService.getCurrentUser();\n  }\n\n  logout() {\n    this.authService.logout();\n    \n    this.alertify.message(\"Successfully logged out\");\n    this.router.navigate([\"/home\"]);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n  <h2 name=\\\"signUp\\\" class=\\\"text-center text-primary\\\">Sign Up</h2>\\n  <hr>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"control-label\\\" style=\\\"margin-right:10px\\\">I am a: </label>\\n    <label class=\\\"radio-inline\\\">\\n      <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"male\\\" formControlName=\\\"gender\\\">Male\\n    </label>\\n    <label class=\\\"radio-inline ml-3\\\">\\n      <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"female\\\" formControlName=\\\"gender\\\">Female\\n    </label>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input formControlName=\\\"username\\\"\\n      [ngClass]=\\\"{'is-invalid': registerForm.get('username').errors\\n        && registerForm.get('username').touched}\\\"\\n      type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\">\\n    <div *ngIf=\\\"registerForm.get('username').hasError('required')\\\"\\n    class=\\\"invalid-feedback\\\">Username is required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Known as\\\" formControlName=\\\"knownAs\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\\\">\\n      Known as is required\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('dateOfBirth').errors\\n      && registerForm.get('dateOfBirth').touched}\\\"\\n      class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\"\\n      placeholder=\\\"Date of Birth\\\" formControlName=\\\"dateOfBirth\\\" type=\\\"string\\\" >\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\\\">\\n      Date of Birth is required\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\\\">\\n      City is required\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Country\\\" formControlName=\\\"country\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\\\">\\n      Country is required\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input formControlName=\\\"password\\\"\\n      [ngClass]=\\\"{'is-invalid': registerForm.get('password').errors\\n      && registerForm.get('password').touched}\\\"\\n      type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\">\\n    <div *ngIf=\\\"registerForm.get('password').hasError('required')\\\"\\n      class=\\\"invalid-feedback\\\">Password is required</div>\\n    <div *ngIf=\\\"registerForm.get('password').hasError('minlength')\\\"\\n      class=\\\"invalid-feedback\\\">\\n      Password must be more than {{ registerForm.get('password').errors.minlength.requiredLength }} characters\\n    </div>\\n    <div *ngIf=\\\"registerForm.get('password').hasError('maxlength')\\\"\\n      class=\\\"invalid-feedback\\\">\\n      Password must be less than {{ registerForm.get('password').errors.maxlength.requiredLength }} characters\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input formControlName=\\\"confirmPassword\\\"\\n      [ngClass]=\\\"{'is-invalid': registerForm.get('confirmPassword').errors\\n        && registerForm.get('confirmPassword').touched\\n        || registerForm.hasError('mismatch')\\n          && registerForm.get('confirmPassword').touched}\\\"\\n      type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Confirm Password\\\">\\n    <div *ngIf=\\\"registerForm.get('confirmPassword').hasError('required')\\\"\\n      class=\\\"invalid-feedback\\\">Confirm your Password</div>\\n    <div *ngIf=\\\"registerForm.hasError('mismatch')\\\"\\n    class=\\\"invalid-feedback\\\">Passwords doesn't match</div>\\n  </div>\\n    \\n  <div class=\\\"form-group text-center\\\">\\n    <button [disabled]=\\\"registerForm.invalid\\\" class=\\\"btn btn-success mr-2\\\" type=\\\"submit\\\">Register</button>\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n  </div>\\n</form>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { User } from '../models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  user: User;\n  registerForm: FormGroup;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n\n  constructor(\n    private authService: AuthService,\n    private alertify: AlertifyService,\n    private fb: FormBuilder,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.bsConfig = { containerClass: \"theme-red\" };\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: [\"\", Validators.required],\n      knownAs: [\"\", Validators.required],\n      dateOfBirth: [\"\", Validators.required],\n      city: [\"\", Validators.required],\n      country: [\"\", Validators.required],\n      password: [\"\", [ Validators.required,\n                       Validators.minLength(4),\n                       Validators.maxLength(8) ]],\n      confirmPassword: [\"\", Validators.required]\n    },\n    {\n      validator: this.passwordMatchValidator\n    });\n  }\n\n  passwordMatchValidator(g: FormGroup) {\n    return g.get(\"password\").value === g.get(\"confirmPassword\").value\n      ? null : {\"mismatch\": true};\n  }\n\n  register() {\n    if(this.registerForm.valid) {\n      this.user = Object.assign({}, this.registerForm.value);\n    this.authService.register(this.user).subscribe(\n      next => {\n        this.alertify.success(\"Successfully registerd\");\n      },\n      error => {\n        this.alertify.error(error);\n      },\n      () => {\n        this.authService.login(this.user).subscribe(() => {\n          this.router.navigate([\"/members\"]);\n        });\n      }\n    );\n    this.alertify.error(this.registerForm.value);\n    }\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n}\n","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { PreventUnsavedChanges } from './guards/prevent-unsaved-changes.guard';\r\n\r\nexport const appRoutes: Routes = [\r\n    {path:\"\", component: HomeComponent},\r\n    {\r\n        path:\"\",\r\n        runGuardsAndResolvers:\"always\",\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            {path:\"lists\", component: ListsComponent},\r\n            {path:\"members/:id\", component: MemberDetailComponent},\r\n            {path:\"member/edit\", component: MemberEditComponent, canDeactivate: [PreventUnsavedChanges]},\r\n            {path:\"members\", component: MemberListComponent},\r\n            {path:\"messages\", component: MessagesComponent},\r\n        ]\r\n    },\r\n    {path:\"**\", redirectTo: \"\", pathMatch: \"full\"}\r\n];","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\n  constructor() { }\n\n  confirm(message: string, okCallback: () => {}) {\n    alertify.confirm(message, e => {\n      if(e) okCallback();\n      else {}\n    });\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string) {\n    alertify.error(message);\n  }\n\n  warning(message: string) {\n    alertify.success(message);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt'\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  baseUrl = environment.apiUrl +  \"auth/\";\n  jwtHelper = new JwtHelperService;\n\n  constructor(private http: HttpClient) { }\n\n  login(model: {}) {\n    return this.http.post(this.baseUrl + \"login\", model)\n      .pipe(\n        map((response: any) => {\n          if(response) {\n            localStorage.setItem(\"token\", response.token);\n            localStorage.setItem(\"user\", JSON.stringify(response.user));\n          }\n        })\n      );\n  }\n\n  logout() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n  }\n\n  register(user: User) {\n    return this.http.post(this.baseUrl + \"register\", user);\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem(\"token\");\n    this.decodedToken();\n    return !!token;\n  }\n\n  decodedToken() {\n    return this.jwtHelper.decodeToken(localStorage.getItem(\"token\"));\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  }\n\n  getUsername() {\n    return this.decodedToken().unique_name || \"\";\n  }\n\n  getId() {\n    return this.decodedToken().nameid;\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(\r\n            catchError(error => {\r\n                if(error instanceof HttpErrorResponse) {\r\n                    if(error.status === 401) return throwError(error.statusText);\r\n\r\n                    const applicationError = error.headers.get(\"Application-Error\");\r\n                    if(applicationError) {\r\n                        console.error(applicationError);\r\n                        return throwError(applicationError);\r\n                    }\r\n                    \r\n                    const serverError = error.error;\r\n                    let modelStateError = '';\r\n                    if(serverError && typeof serverError === 'object') {\r\n                        for(const key in serverError) {\r\n                            if(serverError[key]) {\r\n                                modelStateError += serverError[key] + '\\n';\r\n                            }\r\n                        }\r\n                    }\r\n                    return throwError(modelStateError || serverError || 'Server Error');\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi: true\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user';\nimport { PaginatedResult } from '../models/pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from '../models/Message';\n\n// const httpOptions = {\n//   headers: new HttpHeaders({\n//     \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\n//   })\n// };\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserService {\n  private baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getUsers(page?, itemsPerPage?, userParams?, likesParams?): Observable<PaginatedResult<User[]>> {\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\n\n    let params = new HttpParams();\n\n    if(page != null && itemsPerPage != null) {\n      params = params.append(\"pageNumber\", page);\n      params = params.append(\"pageSize\", itemsPerPage);\n    }\n\n    if(userParams != null) {\n      params = params.append(\"minAge\", userParams.minAge);\n      params = params.append(\"maxAge\", userParams.maxAge);\n      params = params.append(\"gender\", userParams.gender);\n      params = params.append(\"orderBy\", userParams.orderBy);\n    }\n\n    if(likesParams === \"Likers\") {\n      params = params.append(\"likers\", \"true\");\n      params = params.append(\"likees\", \"false\");\n    }\n\n    if(likesParams === \"Likees\") {\n      params = params.append(\"likers\", \"false\");\n      params = params.append(\"likees\", \"true\");\n    }\n\n    return this.http.get<User[]>(this.baseUrl + \"users\", {observe: 'response', params})\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if(response.headers.get(\"Pagination\") != null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get(\"Pagination\"))\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getUser(id): Observable<User> {\n    return this.http.get<User>(this.baseUrl + \"users/\" + id);\n  }\n\n  updateUser(id: number, user: User) {\n    return this.http.put(this.baseUrl + \"users/\" + id, user);\n  }\n\n  setMainPhoto(userId: number, photoId: number) {\n    return this.http.post(this.baseUrl + \"users/\" + userId + \"/photos/\" + photoId + \"/setMain\", {});\n  }\n\n  deletePhoto(userId: number, photoId: number) {\n    return this.http.delete(this.baseUrl + \"users/\" + userId + \"/photos/\" + photoId);\n  }\n\n  sendLike(userId: number, recipientId: number) {\n    return this.http.post(this.baseUrl + \"users/\" + userId + \"/like/\" + recipientId, {});\n  }\n\n  getMessages(userId: number, page?, itemsPerPage?, messageContainer?) {\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\n\n    let params = new HttpParams();\n\n    if(page != null && itemsPerPage != null) {\n      params = params.append(\"pageNumber\", page);\n      params = params.append(\"pageSize\", itemsPerPage);\n      params = params.append(\"messageContainer\", messageContainer);\n    }\n\n    return this.http.get<Message[]>(this.baseUrl + \"users/\" + userId + \"/messages\",\n      {observe: \"response\", params}).pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if(response.headers.get(\"Pagination\") !== null)\n            paginatedResult.pagination = JSON.parse(response.headers.get(\"Pagination\"));\n\n          return paginatedResult;\n        })\n      )\n  }\n\n  getMessageThread(senderId: number, recipientId: number) {\n    return this.http.get(this.baseUrl + \"users/\" + senderId + \"/messages/thread/\" + recipientId);\n  }\n\n  sendMessage(recipientId: number, message: Message) {\n    return this.http.post(this.baseUrl + \"users/\" + recipientId + \"/messages\", message);\n  }\n\n  deleteMessage(userId: number, messageId: number) {\n    return this.http.post(this.baseUrl + \"users/\" + userId + \"/messages/\" + messageId, {});\n  }\n\n  markMessageAsRead(userId: number, messageId: number) {\n    this.http.post(this.baseUrl + \"users/\" + userId + \"/messages/\" + messageId + \"/read\", {})\n      .subscribe();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"http://localhost:5000/api/\"\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}